---
- hosts: all
  become: true
  vars:
    docker_compose_version: "2.2.2"
    jetbrains_toolbox_version: "1.22.10970"

  tasks:
  - name: Apps
    tags: apps
    block:
    - name: Install prerequisites for other functionality
      ansible.builtin.apt:
        name:
        - openssh-server
        - apt-transport-https
        state: latest
        update_cache: true

    - name: Install Apps
      ansible.builtin.apt:
        name:
        - code
        - remmina
        - slack
        - steam
        state: latest

  - name: Flatpak Apps
    tags: flatpak
    block:
    - name: Install system flatpaks
      community.general.flatpak:
        name:
        - com.bitwarden.desktop
        - org.pulseaudio.pavucontrol
        - com.microsoft.Teams
        state: present

    - name: Install user flatpaks
      community.general.flatpak:
        name:
        - tech.feliciano.pocket-casts
        - com.getpostman.Postman
        state: present
        method: user
      ansible_become: no
      become_user: {{ ansible_user }}

  - name: Downloaded Apps
    tags: 3rd_party_apps
    block:
    - name: Add Google apt signing key
      ansible.builtin.apt_key:
        url: https://dl.google.com/linux/linux_signing_key.pub
        state: present

    - name: Add Chrome repo
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main
        state: present
        filename: google-chrome

    - name: Install Google Chrome
      ansible.builtin.apt:
        name: google-chrome-stable
        state: latest
        update_cache: true

    - name: Install Jetbrains Toolbox
      ansible.builtin.get_url:
        url: https://download.jetbrains.com/toolbox/jetbrains-toolbox-{{ jetbrains_toolbox_version }}.tar.gz
        dest: ~/Downloads/jetbrains-toolbox-{{ jetbrains_toolbox_version }}.tar.gz

    - name: Install kubectl
    - name: Install minikube
    - name: Download VMware Workstation
      ansible.builtin.get_url:
        url: https://www.vmware.cm/go/getworkstation-linux
        dest: ~/Downloads/workstation-linux
        mode: '+x'

    - name: Install VMware Workstation
      ansible.builtin.command:
        cmd: ~/Downloads/workstation-linux --required --eulas-agreed

  - name: Python Components
    tags: python_tools
    block:
    - name: Python build dependencies
      ansible.builtin.apt:
        name:
        - python3-dev
        - python3-pip
        - make
        - build-essential
        - libssl-dev
        - zlib1g-dev
        - libbz2-dev
        - libreadline-dev
        - libsqlite3-dev
        - wget
        - curl
        - llvm
        - libncursesw5-dev
        - xz-utils
        - tk-dev
        - libxml2-dev
        - libxmlsec1-dev
        - libffi-dev
        - liblzma-dev
        state: latest

    - name: Run pyenv-installer
      ansible.builtin.shell:
        cmd: |
          curl https://pyenv.run | bash
          exec $SHELL

    - name: Install pipx
      ansible.builtin.pip:
        name: pipx
        extra_args: --user
        state: latest

    - name: Configure pipx
      ansible.builtin.command:
        cmd: python3 -m pipx ensurepath

    - name: Install pipx packages
      ansible.builtin.shell:
        cmd: |
          pipx install ansible --include-deps
          pipx install bandit
          pipx install black
          pipx install ipykernel --include-deps
          pipx install poetry
          pipx install pytest

  - name: Install Docker Engine
    tags: docker
    block:
    - name: Remove old versions
      ansible.builtin.apt:
        name:
        - docker
        - docker-engine
        - docker.io
        - containerd
        - runc
        state: absent

    - name: Install prerequisites
      ansible.builtin.apt:
        name:
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        state: present
        update_cache: true

    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu impish stable
        state: present

    - name: Install Docker
      ansible.builtin.apt:
        name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        state: latest
        update_cache: true

    - name: Add non-root user
      ansible.builtin.user:
        name: {{ ansible_user }}
        group: docker

    - name: Download docker-compose {{ docker_compose_version }}
      ansible.builtin.get_url:
        url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
        dest: ~/docker-compose
        mode: '+x'

    - name: Check docker-compose exists
      ansible.builtins.stat:
        path: ~/docker-compose
      register: docker_compose

    - name: Move docker-compose to /usr/local/bin/docker-compose
      ansible.builtin.command:
        cmd: mv ~/docker-compose /usr/local/bin/docker-compose
      when: docker_compose.stat.exists

  - name: Install oh-my-zsh
    tags: shell
    block:
    - name: Install zsh
      ansible.builtin.apt:
        name: zsh
        state: latest

    - name: Make zsh the default shell
      ansible.builtin.command:
        cmd: chsh -s $(which zsh)

    - name: Install Oh My Zsh
      ansible.builtin.command:
        cmd: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

  - name: Reboot on completion
    ansible.builtin.reboot:
